TextureReplacer
{
  // When to enable texture compression.
  // Possible options: `always`, `never` and `auto`. Auto means it is enabled
  // unless TextureCompressor mod is detected.
  isCompressionEnabled = never
  // Generate mipmaps for PNGs and JPEGs in certain directories (specified in
  // the next option) to a fix KSP bug that doesn't generate mipmaps for these
  // images and makes them look ugly under high angles.
  // Possible options: `always`, `never` and `auto`. Auto means it is enabled
  // unless TextureCompressor mod is detected.
  isMipmapGenEnabled = always

  // List of substrings that trigger mipmap generation when found in the path of
  // a texture that is missing mipmaps. These should cover all model textures
  // but not UI icons. The strings are case-sensitive on all platforms!
  mipmapDirSubstrings = /FX/ /Parts/ /Spaces/ TextureReplacer/ KAS/ Engineer/ FASA/ ASET/ FusTek/

  // Replace helmet visor shader to support reflections (EVA only).
  isVisorReflectionEnabled = true

  // Reflection colour. Reflection is multiplied by this RGB colour before it is
  // added to the visor colour.
  visorReflectionColour = 0.985 0.785 0.785

  // Spawn a Kerbal on EVA in his/her IVA suit without helmet and jetpack when
  // in breathable atmosphere (oxygen + sufficent pressure).
  isAtmSuitEnabled = true

  // Minimum air pressure required for a Kerbal to spawn in his IVA suit.
  atmSuitPressure = 0.5

  CustomKerbals
  {
	Bill Kerman = Head1 Suit1
	Bob Kerman = Head2 Suit1
	Jebediah Kerman = Head3 Suit1
  }

  GenericKerbals
  {
    // Prevent the following heads from being assigned to generic Kerbals.
    // The list must be space- and/or comma-separated.
    excludedHeads = Head1, Head2, Head3,

    // Prevent the following suits from being assigned to generic Kerbals.
    // The list must be space- and/or comma-separated.
    excludedSuits = Suit1

    // Female heads. Those will only be paired with female suits.
    // The list must be space- and/or comma-separated.
    femaleHeads = Head5

    // Female suits. Those will only be paired with female heads.
    // The list must be space- and/or comma-separated.
    femaleSuits = Suit3

    // Whether generic suits should be assigned pseudo-randomly based on a
    // Kerbal's name hash or consecutively based on a Kerbal's position in the
    // global roster.
    // Possible options: `random` or `consecutive`.
    suitAssignment = random
  }

  CabinSuits
  {
    // Cabin-specific suits. These are enforced even if a Kerbal has a custom
    // suit. Entries are of the form:
    //
    //   partName = suitDir
    //
    // E.g.
    //
    //   Mark1Cockpit = PilotSuit
    //   crewCabin = DEFAULT
    //
    // where `partName` is the name of a part (`name = ...` in `part.cfg`) and
    // `suitDir` is either a suit from `Suits/` or `DEFAULT`.
  }
}
